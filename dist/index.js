class EntityComponentSystem{constructor(){this.components=[],this.processors=[],this.entities=[]}displayProcessors(){this.processors.forEach(t=>console.log(t.name))}createEntity(t,s){let o={name:t,components:s};return s.forEach(t=>{const s=this.components.find(s=>t===s.name);o=Object.assign(o,s.state)}),o}addEntity(t){this.entities.push(t)}addComponent(t){this.components.push(t)}addProcessor(t){this.processors.push(t)}getEntitiesFromComponent(t){return this.entities.filter(s=>s.components.includes(t))}getComponent(t){return this.components.find(s=>t===s.name)}runProcessors(){this.processors.forEach(t=>{const s=this.getEntitiesFromComponent(t.component),o=this.getComponent(t.component);t.update(o,s)})}runCustomLogicOnEntities(){this.entities.forEach(t=>{t.update&&t.update()})}update(){this.runProcessors(),this.runCustomLogicOnEntities()}}export default EntityComponentSystem;
